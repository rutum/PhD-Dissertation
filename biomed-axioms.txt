//causality
1c] BEFORE(x3,e4):25 & CAUSES(x3,e4):25 -> in-in'(e1,e4,x2):10 & response-nn'(e2,x2):10 & to-in'(e3,x2,x3):10| 
11c] BEFORE(x3,e2):25 & CAUSES(x3,e2):25 -> respond-vb'(e2,x1,x2):10 & to-in'(e3,x2,x3):10| 
111c] BEFORE(x3,x1):25 & CAUSES(x3,x1):25 -> respond-vb'(e2,x1):10 & to-in'(e3,e2,x3):10| 
1111c] BEFORE(x2,x3):25 & CAUSES(x2,x3):25 -> response-nn'(e2,x2):10 & to-in'(e3,x2,x3):10| 
2c] BEFORE(x0,x8):25 & CAUSES(x0,x8):25 -> result-vb'(e0,x0):10 & in-in'(e1,e0,x8):10| 
22c] BEFORE(x6,x10):25 & CAUSES(x6,x10):25 -> in-in'(e12,x6,x10):0 & result-nn'(e9,x6):0| 
21c] BEFORE(x0,x8):25 & CAUSES(x0,x8):25 -> result-vb'(e0,x0):10 & of-in'(e1,e0,x8):10| 
211c] BEFORE(x0,x8):25 & CAUSES(x0,x8):25 -> result-nn'(e0,x0):10 & of-in'(e1,x0,x8):10| 
3c] CAUSES(e3,e2):50 -> by-in'(e1,e2,e3):10| 
4c] CAUSES(x1,x3):25 & BEFORE(x1,x3):25 -> lead-vb'(e1,x1,x2):10 & to-in'(e2,e1,x3):10| 
41c] CAUSES(x1,x3):25 & BEFORE(x1,x3):25 -> lead-vb'(e1,x1):10 & to-in'(e2,e1,x3):10| 
5c] CAUSES(e4,x3):25 & BEFORE(x1,x3):25 -> in-in'(e1,e4,x2):10 & order-nn'(e2,x2):10 & to-in'(e2,e1,x3):10| 
6c] CAUSES(x1,x2):25 & BEFORE(x1,x2):25 -> govern-vb'(e1,x1,x2):10| 
7c] CAUSES(x3,x1):25 & BEFORE(x3,x1):25 -> control-vb'(e1,x1,x2):10 & by-in'(e2,e1,x3):10| 
71c] CAUSES(x1,x2):25 & BEFORE(x1,x2):25 -> control-vb'(e1,x1,x2):10| 
711c] CAUSES(x1,x2):25 & BEFORE(x1,x2):25 -> drive-vb'(e5,x1,x2):0| 
8c] CAUSES(e3,e2):25 & BEFORE(e3,e2):25 -> when-rb'(e1,e2,e3):10| 
9c] CAUSES(e2,e3):25 -> because-in'(e1,e2,e3):10| 
10c] CAUSES(x1,x2):25 & BEFORE(x1,x2):25 -> promote-vb'(e1,x1,x2):10| 
11c] CAUSES(x1,x2):25 & BEFORE(x1,x2):25 -> critical-adj'(e1,x1):10 & for-in'(e0,e1,x2):10| 
12c] CAUSES(x0,x10):25 -> necessary-adj'(e7,x0):20 & for-in'(e19,e7,x10):20| 
13c] CAUSES(x0,x1):25 & BEFORE(x0,x1):25 -> produce-vb'(e0,x0,x1):0| 
14c] CAUSES(x1,x30):25 & BEFORE(x1,x30):25 -> responsible-adj'(e18,x1):0 & for-in'(e45,e18,x30):0| 
15c] CAUSES(x13,e18):25 & BEFORE(x13,e18):25 -> as-in'(e17,e18,x13):0 & of-in'(e22,x13,x15):0 & consequence-nn'(e20,x13):0| 
16c] CAUSES(x0,e2):25 & BEFORE(x0,e2):25 -> necessary-adj'(e0,x0,e2):0| 
17c] CAUSES(x15,e14):25 & BEFORE(x15,e14):25 -> upon-in'(e13,e14,x15):0| 
18c] CAUSES(x31,x32):25 & BEFORE(x31,x32):25 -> cause-vb'(e39,x31,x32):0| 
19c] CAUSES(x31,x32):25 & BEFORE(x31,x32):25 -> require-vb'(e39,x31,x32):0| 
23c] CAUSES(x8,e0):25 & BEFORE(x8,e0):25 -> depend-vb'(e0,x0):0 & on-in'(e1,e0,x8):0| 
24c] CAUSES(x3,x1):25 -> essential-adj'(e1,x1):0 & for-in'(e2,e1,x3):0| 
25c] CAUSES(x50,x52):25 & BEFORE(x50,x52):25 -> dedicate-vb'(e26,x50,x19):10 & to-in'(e47,e26,x52):10| 
//aspectual
b1a] BEGIN(e2,e1):25 -> start-vb'(e1,x1,e2):10| 
b2a] BEGIN(x2,e1):25 -> progression-nn'(e1,x1):10 & into-in'(e2,x1,x2):10| 
b3a] BEGIN(e1,x2):25 -> beginning-nn'(e1,x1):10 & of-in'(e2,e1,x2):10| 
b31a] BEGIN(e1,x2):25 -> beginning-nn'(e1,x1):10 & of-in'(e2,x1,x2):10| 
b4a] BEGIN(e1,x2):25 -> onset-nn'(e1,x1):10 & of-in'(e2,x1,x2):10| 
b4a] BEGIN(x9,x12):25 -> of-in'(e14,x9,x12):0 & start-nn'(e12,x9):0| 
b6a] BEGIN(e24,e26):25 -> progression-nn'(e24,x10):20 & EVENT(e26,x21):20 & nn'(e27,x21,x10):20| 
b7a] BEGIN(x2,x1):25 -> EVENT(e1,x1):0 & initiation-nn'(e2,x2):0 & nn'(e3,x1,x2):10| 
b8a] BEGIN(x10,x15):25 -> progression-nn'(e26,x10):20 & in-in'(e29,x10,x15):20| 
b9a] BEGIN(e14,x9):25 -> initiation-nn'(e14,x7):0 & of-in'(e16,x7,x9):0| 
b10a] BEGIN(x0,x11):25 -> as-in'(e5,e0,x11):10 & emerge-vb'(e0,x0,x1):10| 
b11a] BEGIN(x40,e49):25 -> begin-vb'(e48,x40,e49):10| 
p1a] PROGRESSION(e2,e1):25 -> progression-nn'(e1,x1):10 & EVENT(e2,x1):10| 
p2a] PROGRESSION(e0,x2):25 -> during-in'(e1,e0,x2):10| 
p3a] PROGRESSION(e12,x35):25 -> progress-vb'(e12,x11):0 & into-in'(e35,e12,x35):0| 
a1a] AFTER(e3,e2):25 -> after-vb'(e1,e3,e2):10 & EVENT(e2,x1):10| 
a2a] AFTER(e2,e3):25 -> after-in'(e1,e3,e2):10| 
a3a] AFTER(x2,x3):25 -> complete-vb'(e1,x1,x2):10 & EVENT(e2,x2):10| 
a4a] AFTER(e6,x6):25 -> from-in'(e8,x1,x6):10 & exit-nn'(e6,x1):20| 
a5a] AFTER(x1,x0):25 -> end-vb'(e0,x0,x1):0| 
e1a] ENTER(e2,e1):25 -> entry-nn'(e1,x1):10 & into-in'(e2,x1,x2):10| 
e2a] ENTER(e1,e3):25 -> entry-nn'(e1,x1):10 & nn'(e2,x2,x1):10 & EVENT(e3,x2):10| 
e3a] ENTER(e2,e1):25 -> enter-vb'(e1,x1,x2):10 & into-in'(e2,e1,e3):10| 
e4a] ENTER(e0,x1):25 -> enter-vb'(e0,x0):0 & into-in'(e5,e0,x1):0| 
n3a] END(e1,x2):25 -> end-nn'(e1,x1):10 & of-in'(e2,x1,x2):10| 
al1a] BEFORE(e1,x1):25 -> nearly-rb'(e1,x1):0| 
al2a] BEFORE(x10,x16):25 -> precede-vb'(e22,x10,x16):0| 
ne1a] AFTER(e1,x1):25 & TYPE-OF(e1,e2):25 -> next-adj'(e1,x1):0 & EVENT(e2,x1):0| 
w1] WITHIN(e10,x21):25 -> within-in'(e18,e10,x21):0| 
//events
1e] EVENT(e1):25 -> understand-vb'(e1,x1,x2):10| 
2e] EVENT(e1,x1):25 -> cell-cycle-nn'(e1,x1):10| 
22e] EVENT(e1,x1):25 -> cell-cycle'(e1,x1):0| 
3e] EVENT(e1,x1):25 -> M-phase-nn'(e1,x1):10| 
31e] EVENT(e1,x1):25 -> m-phase'(e1,x1):10| 
//4e] EVENT(e1,x1):25 -> g1'(e1,x1):10| 
5e] EVENT(e1,x1):25 -> cycle-nn'(e1,x1):10| 
6e] EVENT(e1,x1):25 -> s-phase'(e1,x1):0| 
7e] EVENT(e1,x1):25 -> mitosis-nn'(e1,x1):0|  
